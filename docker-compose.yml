version: '3.11'

services:

  web:
    build:
      context: ./src
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    container_name: web-online-store
    volumes:
      - ./:/usr/src/app/
      - /src/static/:/usr/src/app/src/static/
      - /src/media/:/usr/src/app/src/media/
    ports:
      - "8000:8000"
    env_file:
      - src/.env
    depends_on:
      - db
      - redis
      - rabbitmq

  db:
    image: postgres:14-alpine
    container_name: db-store
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    image: redis:latest
    container_name: redis-store
    volumes:
      - redis_data:/data/
    env_file:
      - src/.env

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq-store
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - rabbitmq

  celery:
    build:
      context: ./src
    command: ['celery', '--app=config', 'worker', '--loglevel=info', '--pool=solo']
    volumes:
      - ./:/usr/src/app/
    container_name: celery-store
    env_file:
      - src/.env
    environment:
      - BROKER_URL=${RABBIT_URL}
      - RESULT_BACKEND=${REDIS_URL}
      - BROKER_CONNECTION_RETRY=300
    depends_on:
      - db
      - redis
      - rabbitmq
      - web

  celery-beat:
    build:
      context: ./src
    command: ['celery', '-A', 'config', 'beat', '-l', 'info']
    volumes:
      - ./:/usr/src/app/
    container_name: celery-beat-store
    depends_on:
      - web
      - db
      - redis
      - rabbitmq
      - celery

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  rabbitmq:
    driver: bridge
